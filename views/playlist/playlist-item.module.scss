@mixin text-mock($width) {
  &:empty {
    &::after {
      display: inline-flex;
      min-width: $width;
      content: '\200B';
      background-color: rgba(black, 0.3);
      border-radius: var(--radius-regular);
    }
  }
}

.playlist-item {
  padding: 8px 16px;

  display: flex;
  gap: var(--spacing-xxs);

  border-radius: var(--radius-s);
  background-color: var(--color-canvas-overlay);
  border: 1px solid transparent;

  .index {
    color: rgba(black, 0.8);
    min-width: 2ch;
  }

  .left {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: var(--spacing-xxs);
    margin-right: var(--spacing-xs);

    .image {
      width: 40px;
      height: 40px;

      border-radius: var(--radius-s);
      background-color: rgba(black, 0.3);

      img {
        border-radius: var(--radius-regular);
      }
    }

    .year {
      @include text-mock(4ch);

      // position: absolute;
      font-size: var(--font-size-xs);
    }
  }

  .right {
    flex-grow: 1;
    display: flex;
    gap: var(--spacing-s);
    justify-content: space-between;
    overflow: hidden;

    .artist-and-title {
      display: flex;
      flex-direction: column;

      gap: var(--spacing-xxxs);
      overflow: hidden;

      .title {
        @include text-mock(12ch);

        font-family: var(--font-display);
        font-weight: bold;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
      }

      .artist-container {
        font-size: var(--font-size-s);

        display: flex;

        gap: var(--spacing-xxs);
        overflow: hidden;

        .artist {
          @include text-mock(6ch);

          text-overflow: ellipsis;
          white-space: nowrap;
          overflow: hidden;
        }

        &.mock-artist-container {
          background-color: rgba(black, 0.3);
          border-radius: var(--radius-regular);
          width: 8em;
        }
      }
    }

    .lock {
      align-self: center;
      flex-shrink: 0;

      .pin-button {
        border: 1px solid transparent;
        // border-color: var(--color-neutral-emphasis);

        svg {
          width: 16px;
          fill: rgba(black, 0.8);
        }

        &.is-pinned {
          // background-color: var(--color-neutral-emphasis);

          svg {
            fill: white;
          }
        }
      }


      .icon-button {
        padding: var(--spacing-s);
      }
    }
  }
}



:global(:root[data-theme="dark"]) {


  .playlist-item {
    .pin-button {
      border-color: #afb8c1;

      svg {
        fill: white;
      }

      &.is-pinned {
        background-color: #afb8c1;

        svg {
          fill: currentColor;
        }
      }
    }
  }
}

:global(:root[data-theme="light"]) {

  .playlist-item {
    .pin-button {
      border-color: var(--color-neutral-emphasis);

      &.is-pinned {
        background-color: var(--color-neutral-emphasis);
      }
    }
  }
}